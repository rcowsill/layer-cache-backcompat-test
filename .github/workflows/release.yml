name: CI

on: push

defaults:
  run:
    shell: bash

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Output matrix
      id: set_matrix
      uses: actions/github-script@v2
      with:
        script: |
          return {
            inspect_image: [
              'test_project_scratch',
              'hello-world'
            ],
            os: [
              'ubuntu-latest',
              'windows-latest',
            ],
            include: [
              {
                inspect_image: 'test_project_scratch',
                prepare_command: 'docker-compose -f test_project/docker-compose.yml -p test_project pull',
                build_command: 'docker-compose -f test_project/docker-compose.yml -p test_project build',
              }, {
                inspect_image: 'hello-world',
                prepare_command: ':',
                build_command: 'docker pull hello-world',
              }
            ],
            exclude: [
              {
                inspect_image: 'test_project_scratch',
                os: 'windows-latest',
              },
            ],
          }

    outputs:
      matrix: ${{ steps.set_matrix.outputs.result }}

  test_restoring:
    needs: setup
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - run: ${{ matrix.prepare_command }}

    - uses: rcowsill/action-docker-layer-caching@test/fix-87-test-bc-release
      name: Run rcowsill/action-docker-layer-caching@test/fix-87-test-bc-release
      with:
        key: never-restored-docker-layer-caching-${{ matrix.os }}-${{ matrix.inspect_image }}-sha:${{ github.sha }}-{hash}
        restore-keys: docker-layer-caching-${{ matrix.os }}-${{ matrix.inspect_image }}-
        skip-save: 'true'

    - name: Show cached image info
      run: docker inspect ${{ matrix.inspect_image }}

    - name: Get cached image ID
      run: echo ::set-output name=id::$(docker image ls -q ${{ matrix.inspect_image }})
      id: cached

    - run: ${{ matrix.build_command }}

    - name: Show built image info
      run: docker inspect ${{ matrix.inspect_image }}

    - name: Show built image ID
      run: echo ::set-output name=id::$(docker image ls -q ${{ matrix.inspect_image }})
      id: latest

    - name: Compare cached ID and after build ID
      run: |
        if [ ! '${{ steps.cached.outputs.id }}' = '${{ steps.latest.outputs.id }}' ];then
          echo cached != latest
          exit 1
        fi

  test_saving:
    needs: [setup, test_restoring]
    if: always() && needs.setup.result == 'success'
    strategy:
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - run: ${{ matrix.prepare_command }}

    - uses: rcowsill/action-docker-layer-caching@test/fix-87-test-bc-release
      name: Run rcowsill/action-docker-layer-caching@test/fix-87-test-bc-release
      with:
        key: docker-layer-caching-${{ matrix.os }}-${{ matrix.inspect_image }}-sha:${{ github.sha }}-{hash}

    - run: ${{ matrix.build_command }}
